"use strict";
var userAgent = navigator.userAgent.toLowerCase()
  , initialDate = new Date
  , $document = $(document)
  , $window = $(window)
  , $html = $("html")
  , isDesktop = $html.hasClass("desktop")
  , isIE = -1 != userAgent.indexOf("msie") ? parseInt(userAgent.split("msie")[1]) : -1 != userAgent.indexOf("trident") ? 11 : -1 != userAgent.indexOf("edge") ? 12 : !1
  , isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
  , isTouch = "ontouchstart"in window
  , plugins = {
    pointerEvents: 11 > isIE ? "js/pointer-events.min.js" : !1,
    bootstrapTooltip: $("[data-toggle='tooltip']"),
    bootstrapModalDialog: $(".modal"),
    bootstrapTabs: $(".tabs"),
    rdNavbar: $(".rd-navbar"),
    rdParallax: $(".rd-parallax"),
    rdGoogleMaps: $(".rd-google-map"),
    rdMailForm: $(".rd-mailform"),
    rdInputLabel: $(".form-label"),
    regula: $("[data-constraints]"),
    responsiveTabs: $(".responsive-tabs"),
    owl: $(".owl-carousel"),
    swiper: $(".swiper-slider"),
    search: $(".rd-search"),
    searchResults: $(".rd-search-results"),
    statefulButton: $(".btn-stateful"),
    isotope: $(".isotope"),
    popover: $('[data-toggle="popover"]'),
    viewAnimate: $(".view-animate"),
    photoSwipeGallery: $("[data-photo-swipe-item]"),
    radio: $("input[type='radio']"),
    checkbox: $("input[type='checkbox']"),
    customToggle: $("[data-custom-toggle]"),
    facebookWidget: $("#fb-root"),
    dateCountdown: $(".DateCountdown"),
    countDown: $(".countdown"),
    counter: $(".counter"),
    progressBarCustom: $(".progress-bar-js"),
    selectFilter: $("select"),
    twitterfeed: $(".twitter"),
    stepper: $("input[type='number']"),
    progressBar: $(".progress-linear"),
    slick: $(".slick-slider")
};
alert('d');	
$document.ready(function() {
    function t(t, a) {
        var e, r = t.attr("data-" + a);
        if (!r)
            return void 0;
        if (e = r.match(/(px)|(%)|(vh)$/i),
        !e.length)
            return void 0;
        switch (e[0]) {
        case "px":
            return parseFloat(r);
        case "vh":
            return $(window).height() * (parseFloat(r) / 100);
        case "%":
            return t.width() * (parseFloat(r) / 100)
        }
    }
    function a(t) {
        var a, e = $(t.slides[t.previousIndex]), r = $(t.slides[t.activeIndex]);
        e.find("video").each(function() {
            this.pause()
        }),
        a = r.find("video"),
        a.length && a.get(0).play()
    }
    function e(t) {
        var a = $(t.container)
          , e = $(t.slides[t.activeIndex]);
        a.find("[data-caption-animate]").each(function() {
            var t = $(this);
            t.removeClass("animated").removeClass(t.attr("data-caption-animate")).addClass("not-animated")
        }),
        e.find("[data-caption-animate]").each(function() {
            var t = $(this)
              , a = t.attr("data-caption-delay")
              , e = t.attr("data-caption-duration");
            setTimeout(function() {
                t.removeClass("not-animated").addClass(t.attr("data-caption-animate")).addClass("animated"),
                e && t.css("animation-duration", e + "ms")
            }, a ? parseInt(a) : 0)
        })
    }
    function r(t, a, e, o) {
        var s = window.scrollY || window.pageYOffset;
        if (o != s && (o = s,
        t.addClass("no-transition"),
        t[0].style.transform = "translate3d(0," + -s * (1 - a) + "px,0)",
        t.height(),
        t.removeClass("no-transition"),
        "true" === t.attr("data-fade"))) {
            var i, n = t[0].getBoundingClientRect(), l = 2 * n.top + s, d = e.outerHeight(), c = e.offset().top + d / 2, p = l + t.outerHeight() / 2, u = d / 6;
            c + u > p && p > c - u ? t[0].style.opacity = 1 : (i = p > c - u ? 1 + (c + u - p) / d / 3 * 5 : 1 - (c - u - p) / d / 3 * 5,
            t[0].style.opacity = 0 > i ? 0 : i > 1 ? 1 : i.toFixed(2))
        }
        requestAnimationFrame(function() {
            r(t, a, e, o)
        })
    }
    function o(t) {
        var a = $(window);
        return t.offset().top + t.outerHeight() >= a.scrollTop() && t.offset().top <= a.scrollTop() + a.height()
    }
    function s(t, a) {
        var e = jQuery(window);
        e.on("load scroll", function() {
            !t.hasClass("lazy-loaded") && o(t) && (a.call(),
            t.addClass("lazy-loaded"))
        })
    }
    function i(t) {
        $("#" + t.live).removeClass("cleared").html(),
        t.current++,
        t.spin.addClass("loading"),
        $.get(D, {
            s: decodeURI(t.term),
            liveSearch: t.live,
            dataType: "html",
            liveCount: t.liveCount,
            filter: t.filter,
            template: t.template
        }, function(a) {
            t.processed++;
            var e = $("#" + t.live);
            t.processed != t.current || e.hasClass("cleared") || (e.find("> #search-results").removeClass("active"),
            e.html(a),
            setTimeout(function() {
                e.find("> #search-results").addClass("active")
            }, 50)),
            t.spin.parents(".rd-search").find(".input-group-addon").removeClass("loading")
        })
    }
    function n(t) {
        for (var a = 0; a < t.length; a++) {
            var e, r = $(t[a]);
            r.addClass("form-control-has-validation").after("<span class='form-validation'></span>"),
            e = r.parent().find(".form-validation"),
            e.is(":last-child") && r.addClass("form-control-last-child")
        }
        t.on("input change propertychange blur", function(t) {
            var e, r = $(this);
            if (("blur" == t.type || r.parent().hasClass("has-error")) && !r.parents(".rd-mailform").hasClass("success"))
                if ((e = r.regula("validate")).length)
                    for (a = 0; a < e.length; a++)
                        r.siblings(".form-validation").text(e[a].message).parent().addClass("has-error");
                else
                    r.siblings(".form-validation").text("").parent().removeClass("has-error")
        }).regula("bind")
    }
    function l(t) {
        var a, e = 0;
        if (t.length) {
            for (b = 0; b < t.length; b++) {
                var r = $(t[b]);
                if ((a = r.regula("validate")).length)
                    for (_ = 0; _ < a.length; _++)
                        e++,
                        r.siblings(".form-validation").text(a[_].message).parent().addClass("has-error");
                else
                    r.siblings(".form-validation").text("").parent().removeClass("has-error")
            }
            return 0 == e
        }
        return !0
    }
    function d(t) {
        window.innerWidth < 599 ? (plugins.bootstrapTooltip.tooltip("destroy"),
        plugins.bootstrapTooltip.tooltip({
            placement: "bottom"
        })) : (plugins.bootstrapTooltip.tooltip("destroy"),
        plugins.bootstrapTooltip.tooltipPlacement,
        plugins.bootstrapTooltip.tooltip())
    }
    var c = $("#copyright-year");
    if (c.length && c.text(initialDate.getFullYear()),
    isIE && (10 > isIE && $html.addClass("lt-ie-10"),
    11 > isIE && plugins.pointerEvents && $.getScript(plugins.pointerEvents).done(function() {
        $html.addClass("ie-10"),
        PointerEventsPolyfill.initialize({})
    }),
    11 === isIE && $("html").addClass("ie-11"),
    12 === isIE && $("html").addClass("ie-edge")),
    plugins.bootstrapTooltip.length) {
        var p = plugins.bootstrapTooltip.attr("data-placement");
        d(p),
        $(window).on("resize orientationchange", function() {
            d(p)
        })
    }
    if (plugins.bootstrapModalDialog.length > 0) {
        var u = 0;
        for (u = 0; u < plugins.bootstrapModalDialog.length; u++) {
            var g = $(plugins.bootstrapModalDialog[u]);
            g.on("hidden.bs.modal", $.proxy(function() {
                var t = $(this)
                  , a = t.find("video")
                  , e = t.find("iframe");
                if (a.length && a[0].pause(),
                e.length) {
                    var r = e.attr("src");
                    e.attr("src", "").attr("src", r)
                }
            }, g))
        }
    }
    if (plugins.progressBar.length)
        for (u = 0; u < plugins.progressBar.length; u++) {
            var f = $(plugins.progressBar[u]);
            $window.on("scroll load", $.proxy(function() {
                var t = $(this);
                if (!t.hasClass("animated-first") && o(t)) {
                    var a = t.attr("data-to");
                    t.find(".progress-bar-linear").css({
                        width: a + "%"
                    }),
                    t.find(".progress-value").countTo({
                        refreshInterval: 40,
                        from: 0,
                        to: a,
                        speed: 500
                    }),
                    t.addClass("animated-first")
                }
            }, f))
        }
    if (plugins.rdGoogleMaps.length) {
        var u;
        $.getScript("//maps.google.com/maps/api/js?key=AIzaSyAFeB0kVA6ouyJ_gEvFbMaefLy3cBCyRwo&sensor=false&libraries=geometry,places&v=3.7", function() {
            var t = document.getElementsByTagName("head")[0]
              , a = t.insertBefore;
            for (t.insertBefore = function(e, r) {
                e.href && -1 != e.href.indexOf("//fonts.googleapis.com/css?family=Roboto") || -1 != e.innerHTML.indexOf("gm-style") || a.call(t, e, r)
            }
            ,
            u = 0; u < plugins.rdGoogleMaps.length; u++) {
                var e = $(plugins.rdGoogleMaps[u]);
                s(e, $.proxy(function() {
                    var t = $(this)
                      , a = t.attr("data-styles");
                    t.googleMap({
                        styles: a ? JSON.parse(a) : [],
                        onInit: function(t) {
                            var a = $("#rd-google-map-address");
                            if (a.length) {
                                var e = a
                                  , r = new google.maps.Geocoder
                                  , o = new google.maps.Marker({
                                    map: t,
                                    icon: "images/gmap_marker.png"
                                })
                                  , s = new google.maps.places.Autocomplete(a[0]);
                                s.bindTo("bounds", t),
                                a.attr("placeholder", ""),
                                a.on("change", function() {
                                    $("#rd-google-map-address-submit").trigger("click")
                                }),
                                a.on("keydown", function(t) {
                                    13 == t.keyCode && $("#rd-google-map-address-submit").trigger("click")
                                }),
                                $("#rd-google-map-address-submit").on("click", function(a) {
                                    a.preventDefault();
                                    var s = e.val();
                                    r.geocode({
                                        address: s
                                    }, function(a, e) {
                                        if (e == google.maps.GeocoderStatus.OK) {
                                            var r = a[0].geometry.location.lat()
                                              , s = a[0].geometry.location.lng();
                                            t.setCenter(new google.maps.LatLng(parseFloat(r),parseFloat(s))),
                                            o.setPosition(new google.maps.LatLng(parseFloat(r),parseFloat(s)))
                                        }
                                    })
                                })
                            }
                        }
                    })
                }, e))
            }
        })
    }
    if (plugins.responsiveTabs.length > 0) {
        var u;
        for (u = 0; u < plugins.responsiveTabs.length; u++) {
            var h = $(plugins.responsiveTabs[u]);
            if (h.easyResponsiveTabs({
                type: "accordion" === h.attr("data-type") ? "accordion" : "default"
            }),
            h.find(".owl-carousel").length && (h.find(".resp-tab-item").on("click", $.proxy(function(t) {
                var a = $(this)
                  , e = a.find(".resp-tab-content-active .owl-carousel").owlCarousel().data("owlCarousel");
                e && "function" == typeof e.onResize && e.onResize()
            }, h)),
            h.find(".resp-accordion").on("click", $.proxy(function(t) {
                var a = $(this)
                  , e = a.find(".resp-tab-content-active .owl-carousel").owlCarousel().data("owlCarousel");
                e && "function" == typeof e.onResize && e.onResize()
            }, h))),
            h.find(".slick-slider").length && (h.find(".resp-tab-item").on("click", $.proxy(function(t) {
                var a = $(this);
                a.find(".resp-tab-content-active .slick-slider").slick("setPosition")
            }, h)),
            h.find(".resp-accordion").on("click", $.proxy(function(t) {
                var a = $(this);
                a.find(".resp-tab-content-active .slick-slider").slick("setPosition"),
                console.log(1)
            }, h))),
            "true" == h.attr("data-external-buttons")) {
                for (var m = h.find(".resp-tabs-list li"), v = '<ul class="resp-tabs-extertal-list">', b = 0; b < m.length; b++)
                    v += "<li><span>" + $(m[b]).text() + "</span></li>";
                v += "</ul>",
                h.find(".resp-tabs-container").before('<div class="resp-tab-external-prev"></div>'),
                h.find(".resp-tab-external-prev").html(v),
                h.find(".resp-tabs-container").after('<div class="resp-tab-external-next"></div>'),
                h.find(".resp-tab-external-next").html(v),
                changeExternalButtons(h),
                h.find(".resp-tab-external-prev").on("click", $.proxy(function(t) {
                    var a = $(this);
                    changeExternalButtons(a, "prev")
                }, h)),
                h.find(".resp-tab-external-next").on("click", $.proxy(function(t) {
                    var a = $(this);
                    changeExternalButtons(a, "next")
                }, h)),
                h.find(".resp-tabs-list .resp-tab-item").on("click", $.proxy(function(t) {
                    var a = $(this);
                    changeExternalButtons(a)
                }, h))
            }
        }
    }
    if (plugins.facebookWidget.length && s(plugins.facebookWidget, function() {
        !function(t, a, e) {
            var r, o = t.getElementsByTagName(a)[0];
            t.getElementById(e) || (r = t.createElement(a),
            r.id = e,
            r.src = "//connect.facebook.net/ru_RU/sdk.js#xfbml=1&version=v2.5",
            o.parentNode.insertBefore(r, o))
        }(document, "script", "facebook-jssdk")
    }),
    plugins.radio.length) {
        var u;
        for (u = 0; u < plugins.radio.length; u++) {
            var w = $(plugins.radio[u]);
            w.addClass("radio-custom").after("<span class='radio-custom-dummy'></span>")
        }
    }
    if (plugins.checkbox.length) {
        var u;
        for (u = 0; u < plugins.checkbox.length; u++) {
            var w = $(plugins.checkbox[u]);
            w.addClass("checkbox-custom").after("<span class='checkbox-custom-dummy'></span>")
        }
    }
    if (plugins.popover.length && (window.innerWidth < 767 ? (plugins.popover.attr("data-placement", "bottom"),
    plugins.popover.popover()) : plugins.popover.popover()),
    plugins.statefulButton.length && $(plugins.statefulButton).on("click", function() {
        var t = $(this).button("loading");
        setTimeout(function() {
            t.button("reset")
        }, 2e3)
    }),
    isDesktop && $().UItoTop({
        easingType: "easeOutQuart",
        containerClass: "ui-to-top fa fa-angle-up"
    }),
    plugins.rdNavbar.length && (plugins.rdNavbar.RDNavbar({
        stickUpClone: plugins.rdNavbar.attr("data-stick-up-clone") ? "true" === plugins.rdNavbar.attr("data-stick-up-clone") : !1
    }),
    plugins.rdNavbar.attr("data-body-class") && (document.body.className += " " + plugins.rdNavbar.attr("data-body-class"))),
    plugins.viewAnimate.length) {
        var u;
        for (u = 0; u < plugins.viewAnimate.length; u++) {
            var x = $(plugins.viewAnimate[u]).not(".active");
            $document.on("scroll", $.proxy(function() {
                o(this) && this.addClass("active")
            }, x)).trigger("scroll")
        }
    }
    if (plugins.swiper.length) {
        var u;
        for (u = 0; u < plugins.swiper.length; u++) {
            var y = $(plugins.swiper[u])
              , C = y.find(".swiper-pagination")
              , k = y.find(".swiper-button-next")
              , T = y.find(".swiper-button-prev")
              , I = y.find(".swiper-scrollbar")
              , M = y.parents(".rd-parallax").length
              , A = y.find(".swiper-slide");
            for (b = 0; b < A.length; b++) {
                var F, w = $(A[b]);
                (F = w.attr("data-slide-bg")) && w.css({
                    "background-image": "url(" + F + ")",
                    "background-size": "cover"
                })
            }
            A.end().find("[data-caption-animate]").addClass("not-animated").end().swiper({
                autoplay: y.attr("data-autoplay") ? "false" === y.attr("data-autoplay") ? void 0 : y.attr("data-autoplay") : 5e3,
                direction: y.attr("data-direction") ? y.attr("data-direction") : "horizontal",
                effect: y.attr("data-slide-effect") ? y.attr("data-slide-effect") : "slide",
                speed: y.attr("data-slide-speed") ? y.attr("data-slide-speed") : 600,
                keyboardControl: "true" === y.attr("data-keyboard"),
                mousewheelControl: "true" === y.attr("data-mousewheel"),
                mousewheelReleaseOnEdges: "true" === y.attr("data-mousewheel-release"),
                nextButton: k.length ? k.get(0) : null,
                prevButton: T.length ? T.get(0) : null,
                pagination: C.length ? C.get(0) : null,
                paginationClickable: C.length ? "false" !== C.attr("data-clickable") : !1,
                paginationBulletRender: C.length && "true" === C.attr("data-index-bullet") ? function(t, a) {
                    return '<span class="' + a + '">' + (t + 1) + "</span>"
                }
                : null,
                scrollbar: I.length ? I.get(0) : null,
                scrollbarDraggable: I.length ? "false" !== I.attr("data-draggable") : !0,
                scrollbarHide: I.length ? "false" === I.attr("data-draggable") : !1,
                loop: "false" !== y.attr("data-loop"),
                simulateTouch: y.attr("data-simulate-touch") ? "true" === y.attr("data-simulate-touch") : !1,
                onTransitionStart: function(t) {
                    a(t)
                },
                onTransitionEnd: function(t) {
                    e(t)
                },
                onInit: function(t) {
                    a(t),
                    e(t);
                    for (var o = y.find(".swiper-parallax"), s = 0; s < o.length; s++) {
                        var i, n = $(o[s]);
                        !M || isIEBrows || isMobile || (i = n.attr("data-speed")) && r(n, i, y, !1)
                    }
                    $(window).on("resize", function() {
                        t.update(!0)
                    })
                }
            }),
            $(window).on("resize", function() {
                var a = t(y, "min-height")
                  , e = t(y, "height");
                e && y.css("height", a && a > e ? a : e)
            }).trigger("resize")
        }
    }
    if (plugins.search.length || plugins.searchResults) {
        var D = "bat/rd-search.php"
          , S = '<h5 class="search_title"><a target="_top" href="#{href}" class="search_link">#{title}</a></h5><p>...#{token}...</p><p class="match"><em>Terms matched: #{count} - URL: #{href}</em></p>'
          , B = "*.html";
        if (plugins.search.length)
            for (u = 0; u < plugins.search.length; u++) {
                var E = $(plugins.search[u])
                  , N = {
                    element: E,
                    filter: E.attr("data-search-filter") ? E.attr("data-search-filter") : B,
                    template: E.attr("data-search-template") ? E.attr("data-search-template") : S,
                    live: E.attr("data-search-live") ? E.attr("data-search-live") : !1,
                    liveCount: E.attr("data-search-live-count") ? parseInt(E.attr("data-search-live")) : 4,
                    current: 0,
                    processed: 0,
                    timer: {}
                };
                if ($(".rd-navbar-search-toggle").length) {
                    var P = $(".rd-navbar-search-toggle");
                    P.on("click", function() {
                        $(this).hasClass("active") || E.find("input").val("").trigger("propertychange")
                    })
                }
                if (N.live) {
                    var R = !1;
                    E.find("input").on("keyup input propertychange", $.proxy(function() {
                        this.term = this.element.find("input").val().trim(),
                        this.spin = this.element.find(".input-group-addon"),
                        clearTimeout(this.timer),
                        this.term.length > 2 ? (this.timer = setTimeout(i(this), 200),
                        0 == R && (R = !0,
                        $("body").on("click", function(t) {
                            0 == $(t.toElement).parents(".rd-search").length && $("#rd-search-results-live").addClass("cleared").html("")
                        }))) : 0 == this.term.length && $("#" + this.live).addClass("cleared").html("")
                    }, N, this))
                }
                E.submit($.proxy(function() {
                    return $("<input />").attr("type", "hidden").attr("name", "filter").attr("value", this.filter).appendTo(this.element),
                    !0
                }, N, this))
            }
        if (plugins.searchResults.length) {
            var z = /\?.*s=([^&]+)\&filter=([^&]+)/g
              , O = z.exec(location.search);
            null != O && $.get(D, {
                s: decodeURI(O[1]),
                dataType: "html",
                filter: O[2],
                template: S,
                live: ""
            }, function(t) {
                plugins.searchResults.html(t)
            })
        }
    }
    if (plugins.owl.length) {
        var u;
        for (u = 0; u < plugins.owl.length; u++) {
            var b, _, L = $(plugins.owl[u]), W = {}, H = ["-", "-xs-", "-sm-", "-md-", "-lg-"], j = [0, 480, 768, 992, 1200];
            for (b = 0; b < j.length; b++)
                for (W[j[b]] = {},
                _ = b; _ >= -1; _--)
                    !W[j[b]].items && L.attr("data" + H[_] + "items") && (W[j[b]].items = 0 > _ ? 1 : parseInt(L.attr("data" + H[_] + "items"))),
                    !W[j[b]].stagePadding && 0 !== W[j[b]].stagePadding && L.attr("data" + H[_] + "stage-padding") && (W[j[b]].stagePadding = 0 > _ ? 0 : parseInt(L.attr("data" + H[_] + "stage-padding"))),
                    !W[j[b]].margin && 0 !== W[j[b]].margin && L.attr("data" + H[_] + "margin") && (W[j[b]].margin = 0 > _ ? 30 : parseInt(L.attr("data" + H[_] + "margin")));
            L.owlCarousel({
                autoplay: "true" === L.attr("data-autoplay"),
                loop: "false" !== L.attr("data-loop"),
                items: 1,
                dotsContainer: L.attr("data-pagination-class") || !1,
                navContainer: L.attr("data-navigation-class") || !1,
                mouseDrag: "false" !== L.attr("data-mouse-drag"),
                nav: "true" === L.attr("data-nav"),
                dots: "true" === L.attr("data-dots"),
                dotsEach: L.attr("data-dots-each") ? parseInt(L.attr("data-dots-each")) : !1,
                animateIn: "fadeIn",
                animateOut: L.attr("data-animation-out") ? L.attr("data-animation-out") : !1,
                responsive: W,
                navText: [],
                center: "true" === L.attr("data-center"),
                navSpeed: 800
            })
        }
    }
    if (plugins.isotope.length) {
        var u, b, G = [];
        for (u = 0; u < plugins.isotope.length; u++) {
            var U, q = plugins.isotope[u], V = $(q).closest(".isotope-wrap").find("[data-isotope-filter]");
            U = new Isotope(q,{
                itemSelector: ".isotope-item",
                layoutMode: q.getAttribute("data-isotope-layout") ? q.getAttribute("data-isotope-layout") : "masonry",
                filter: "*",
                masonry: {
                    columnWidth: .66
                }
            }),
            G.push(U),
            V.on("click", function(t) {
                t.preventDefault();
                var a = $(this)
                  , e = $('.isotope[data-isotope-group="' + this.getAttribute("data-isotope-group") + '"]')
                  , r = a.closest(".isotope-filters");
                r.find(".active").removeClass("active"),
                a.addClass("active"),
                e.isotope({
                    itemSelector: ".isotope-item",
                    layoutMode: e.attr("data-isotope-layout") ? e.attr("data-isotope-layout") : "masonry",
                    filter: "*" == this.getAttribute("data-isotope-filter") ? "*" : '[data-filter*="' + this.getAttribute("data-isotope-filter") + '"]',
                    masonry: {
                        columnWidth: .66
                    }
                }),
                $window.trigger("resize"),
                r.hasClass("isotope-has-d3-graphs") && void 0 != c3ChartsArray && setTimeout(function() {
                    for (var t = 0; t < c3ChartsArray.length; t++)
                        c3ChartsArray[t].resize()
                }, 500)
            }).eq(ca_id - 1).trigger("click")
        }
        $(window).on("load", function() {
            setTimeout(function() {
                var t;
                for (t = 0; t < G.length; t++)
                    G[t].element.className += " isotope--loaded",
                    G[t].layout()
            }, 600)
        })
    }
    if (plugins.selectFilter.length) {
        var u;
        for (u = 0; u < plugins.selectFilter.length; u++) {
            var Y = $(plugins.selectFilter[u]);
            Y.select2({
                theme: "bootstrap"
            }).next().addClass(Y.attr("class").match(/(input-sm)|(input-lg)|($)/i).toString().replace(new RegExp(",","g"), " "))
        }
    }
    if (isDesktop && $html.hasClass("wow-animation") && $(".wow").length && (new WOW).init(),
    plugins.bootstrapTabs.length) {
        var u;
        for (u = 0; u < plugins.bootstrapTabs.length; u++) {
            var J = $(plugins.bootstrapTabs[u]);
            J.on("click", "a", function(t) {
                t.preventDefault(),
                $(this).tab("show")
            })
        }
    }
    if (plugins.rdInputLabel.length && plugins.rdInputLabel.RDInputLabel(),
    plugins.regula.length && n(plugins.regula),
    plugins.rdMailForm.length) {
        var u, b, _, Q = {
            MF000: "Successfully sent!",
            MF001: "Recipients are not set!",
            MF002: "Form will not work locally!",
            MF003: "Please, define email field in your form!",
            MF004: "Please, define type of your form!",
            MF254: "Something went wrong with PHPMailer!",
            MF255: "Aw, snap! Something went wrong."
        };
        for (u = 0; u < plugins.rdMailForm.length; u++) {
            var K = $(plugins.rdMailForm[u]);
            K.attr("novalidate", "novalidate").ajaxForm({
                data: {
                    "form-type": K.attr("data-form-type") || "contact",
                    counter: u
                },
                beforeSubmit: function() {
                    var t = $(plugins.rdMailForm[this.extraData.counter])
                      , a = t.find("[data-constraints]");
                    if (!l(a))
                        return !1;
                    var e = $("#" + t.attr("data-form-output"));
                    e.hasClass("snackbars") && (e.html('<p><span class="icon text-middle fa fa-circle-o-notch fa-spin icon-xxs"></span><span>Sending</span></p>'),
                    e.addClass("active"))
                },
                error: function(t) {
                    var a = $("#" + $(plugins.rdMailForm[this.extraData.counter]).attr("data-form-output"));
                    a.text(Q[t])
                },
                success: function(t) {
                    var a = $(plugins.rdMailForm[this.extraData.counter])
                      , e = $("#" + a.attr("data-form-output"))
                      , r = a.find("select");
                    if (r.length)
                        for (b = 0; b < r.length; b++) {
                            var o = $(r[b]);
                            o.select2("val", null)
                        }
                    a.addClass("success"),
                    t = 5 == t.length ? t : "MF255",
                    e.text(Q[t]),
                    "MF000" === t ? (e.hasClass("snackbars") && e.html('<p><span class="icon text-middle mdi mdi-check icon-xxs"></span><span>' + Q[t] + "</span></p>"),
                    e.addClass("success active")) : (e.hasClass("snackbars") && e.html(' <p class="snackbars-left"><span class="icon icon-xxs mdi mdi-alert-outline text-middle"></span><span>' + Q[t] + "</span></p>"),
                    e.addClass("error active")),
                    a.clearForm(),
                    a.find("input, textarea").blur(),
                    setTimeout(function() {
                        e.removeClass("active error success"),
                        a.removeClass("success")
                    }, 5e3)
                }
            })
        }
    }
    if (plugins.counter.length) {
        var u;
        for (u = 0; u < plugins.counter.length; u++) {
            var X = $(plugins.counter[u]).not(".animated");
            $document.on("scroll", $.proxy(function() {
                var t = this;
                !t.hasClass("animated") && o(t) && (t.countTo({
                    refreshInterval: 40,
                    speed: t.attr("data-speed") || 1e3
                }),
                t.addClass("animated"))
            }, X)).trigger("scroll")
        }
    }
    if (plugins.countDown.length) {
        var u;
        for (u = 0; u < plugins.countDown.length; u++) {
            var Z = plugins.countDown[u]
              , tt = new Date
              , at = Z.getAttribute("data-type")
              , et = Z.getAttribute("data-time")
              , rt = Z.getAttribute("data-format")
              , ot = [];
            tt.setTime(Date.parse(et)).toLocaleString(),
            ot[at] = tt,
            ot.format = rt,
            $(Z).countdown(ot)
        }
    }
    if (plugins.dateCountdown.length) {
        var u;
        for (u = 0; u < plugins.dateCountdown.length; u++) {
            var st = $(plugins.dateCountdown[u])
              , et = {
                Days: {
                    text: "Days",
                    show: !0,
                    color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                },
                Hours: {
                    text: "Hours",
                    show: !0,
                    color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                },
                Minutes: {
                    text: "Minutes",
                    show: !0,
                    color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                },
                Seconds: {
                    text: "Seconds",
                    show: !0,
                    color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                }
            };
            st.TimeCircles({
                color: st.attr("data-color") ? st.attr("data-color") : "rgba(247, 247, 247, 1)",
                animation: "smooth",
                bg_width: st.attr("data-bg-width") ? st.attr("data-bg-width") : 1.1,
                circle_bg_color: st.attr("data-bg") ? st.attr("data-bg") : "rgba(0, 0, 0, 1)",
                fg_width: st.attr("data-width") ? st.attr("data-width") : .04
            }),
            $(window).on("load resize orientationchange", function() {
                window.innerWidth < 479 ? st.TimeCircles({
                    time: {
                        Days: {
                            text: "Days",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Hours: {
                            text: "Hours",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Minutes: {
                            text: "Minutes",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Seconds: {
                            text: "Seconds",
                            show: !1,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        }
                    }
                }).rebuild() : window.innerWidth < 767 ? st.TimeCircles({
                    time: {
                        Days: {
                            text: "Days",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Hours: {
                            text: "Hours",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Minutes: {
                            text: "Minutes",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Seconds: {
                            text: "Seconds",
                            show: !1,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        }
                    }
                }).rebuild() : st.TimeCircles({
                    time: {
                        Days: {
                            text: "Days",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Hours: {
                            text: "Hours",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Minutes: {
                            text: "Minutes",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        },
                        Seconds: {
                            text: "Seconds",
                            show: !0,
                            color: st.attr("data-color") ? st.attr("data-color") : "#f9f9f9"
                        }
                    }
                }).rebuild()
            })
        }
    }
    if (plugins.photoSwipeGallery.length && $document.delegate("[data-photo-swipe-item]", "click", function(t) {
        t.preventDefault();
        var a, e, r = $(this), o = r.parents("[data-photo-swipe-gallery]").find("a[data-photo-swipe-item]"), s = document.querySelectorAll(".pswp")[0], i = {}, n = [], l = 0;
        0 == o.length && (o = r),
        o.each(function() {
            var t, a = $(this), e = a.attr("href"), r = a.attr("data-size").split("x");
            a.is(":visible") && (i[e] || (t = {
                src: e,
                w: parseInt(r[0], 10),
                h: parseInt(r[1], 10),
                el: a
            },
            i[e] = {
                item: t,
                index: l
            },
            n.push(t),
            l++))
        }),
        a = {
            index: i[r.attr("href")].index,
            getThumbBoundsFn: function(t) {
                var a = n[t].el
                  , e = a.offset();
                return {
                    x: e.left,
                    y: e.top,
                    w: a.width()
                }
            }
        },
        e = new PhotoSwipe(s,PhotoSwipeUI_Default,n,a),
        e.init()
    }),
    plugins.customToggle.length) {
        var u;
        for (u = 0; u < plugins.customToggle.length; u++) {
            var w = $(plugins.customToggle[u]);
            w.on("click", $.proxy(function(t) {
                t.preventDefault();
                var a = $(this);
                $(a.attr("data-custom-toggle")).add(this).toggleClass("active")
            }, w)),
            "true" === w.attr("data-custom-toggle-disable-on-blur") && $("body").on("click", w, function(t) {
                t.target !== t.data[0] && $(t.data.attr("data-custom-toggle")).find($(t.target)).length && 0 == t.data.find($(t.target)).length && $(t.data.attr("data-custom-toggle")).add(t.data[0]).removeClass("active")
            })
        }
    }
    if (plugins.progressBarCustom.length) {
        var u, I, at;
        for (u = 0; u < plugins.progressBarCustom.length; u++) {
            var it = plugins.progressBarCustom[u];
            I = null,
            it.className.indexOf("progress-bar-horizontal") > -1 && (at = "Line"),
            it.className.indexOf("progress-bar-radial") > -1 && (at = "Circle"),
            it.getAttribute("data-stroke") && it.getAttribute("data-value") && at ? (I = new ProgressBar[at](it,{
                strokeWidth: Math.round(parseFloat(it.getAttribute("data-stroke")) / it.offsetWidth * 100),
                trailWidth: it.getAttribute("data-trail") ? Math.round(parseFloat(it.getAttribute("data-trail")) / it.offsetWidth * 100) : 0,
                text: {
                    value: "true" === it.getAttribute("data-counter") ? "0" : null,
                    className: "progress-bar__body",
                    style: null
                }
            }),
            I.svg.setAttribute("preserveAspectRatio", "none meet"),
            "Line" === at && I.svg.setAttributeNS(null, "height", it.getAttribute("data-stroke")),
            I.path.removeAttribute("stroke"),
            I.path.className.baseVal = "progress-bar__stroke",
            I.trail && (I.trail.removeAttribute("stroke"),
            I.trail.className.baseVal = "progress-bar__trail"),
            it.getAttribute("data-easing") && !isIE ? $(document).on("scroll", {
                barItem: I
            }, $.proxy(function(t) {
                var a = t.data.barItem
                  , e = $(this);
                o(e) && -1 === this.className.indexOf("progress-bar--animated") && (this.className += " progress-bar--animated",
                a.animate(parseInt(e.attr("data-value")) / 100, {
                    easing: e.attr("data-easing"),
                    duration: e.attr("data-duration") ? parseInt(e.attr("data-duration")) : 800,
                    step: function(t, a) {
                        (a._container.className.indexOf("progress-bar-horizontal") > -1 || a._container.className.indexOf("progress-bar-vertical") > -1) && (a.text.style.width = Math.abs(100 * a.value()).toFixed(0) + "%"),
                        a.setText(Math.abs(100 * a.value()).toFixed(0))
                    }
                }))
            }, it)).trigger("scroll") : (I.set(parseInt($(it).attr("data-value")) / 100),
            I.setText($(it).attr("data-value")),
            "Line" === at && (I.text.style.width = parseInt($(it).attr("data-value")) + "%"))) : console.error(it.className + ": progress bar type is not defined")
        }
    }
    if (plugins.twitterfeed.length > 0) {
        var u;
        for (u = 0; u < plugins.twitterfeed.length; u++) {
            var nt = plugins.twitterfeed[u];
            $(nt).RDTwitter({})
        }
    }
    if (plugins.stepper.length && plugins.stepper.stepper({
        labels: {
            up: "",
            down: ""
        }
    }),
    plugins.slick.length) {
        var u;
        for (u = 0; u < plugins.slick.length; u++) {
            var lt = $(plugins.slick[u]);
            lt.slick({
                slidesToScroll: parseInt(lt.attr("data-slide-to-scroll")) || 1,
                asNavFor: lt.attr("data-for") || !1,
                dots: "true" == lt.attr("data-dots"),
                infinite: "true" == lt.attr("data-loop"),
                focusOnSelect: !0,
                arrows: "true" == lt.attr("data-arrows"),
                swipe: "true" == lt.attr("data-swipe"),
                autoplay: "true" == lt.attr("data-autoplay"),
                vertical: "true" == lt.attr("data-vertical"),
                centerMode: "true" == lt.attr("data-center-mode"),
                centerPadding: lt.attr("data-center-padding") ? lt.attr("data-center-padding") : "0.50",
                mobileFirst: !0,
                responsive: [{
                    breakpoint: 0,
                    settings: {
                        slidesToShow: parseInt(lt.attr("data-items")) || 1
                    }
                }, {
                    breakpoint: 479,
                    settings: {
                        slidesToShow: parseInt(lt.attr("data-xs-items")) || 1
                    }
                }, {
                    breakpoint: 767,
                    settings: {
                        slidesToShow: parseInt(lt.attr("data-sm-items")) || 1
                    }
                }, {
                    breakpoint: 991,
                    settings: {
                        slidesToShow: parseInt(lt.attr("data-md-items")) || 1
                    }
                }, {
                    breakpoint: 1199,
                    settings: {
                        slidesToShow: parseInt(lt.attr("data-lg-items")) || 1,
                        swipe: !1
                    }
                }]
            }).on("afterChange", function(t, a, e, r) {
                var o = $(this)
                  , s = o.attr("data-child");
                s && ($(s + " .slick-slide").removeClass("slick-current"),
                $(s + " .slick-slide").eq(e).addClass("slick-current"))
            })
        }
    }
    if (plugins.rdParallax.length) {
        var u;
        $.RDParallax(),
        isIE || isMobile || $(window).on("scroll", function() {
            for (u = 0; u < plugins.rdParallax.length; u++) {
                var t = $(plugins.rdParallax[u]);
                o(t) ? t.find(".rd-parallax-inner").css("position", "fixed") : t.find(".rd-parallax-inner").css("position", "absolute")
            }
        }),
        $("a[href='#'], a[href^='#']").on("click", function(t) {
            setTimeout(function() {
                $(window).trigger("resize")
            }, 300)
        })
    }
});
